version: '3.4'
services:
  traefik:
    image: traefik:v2.11.20
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://127.0.0.1/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - 80:80
      - 443:443
#      - 8080:8080
#      - 5432:5432
#      - 27017:27017
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      labels: []
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_certs:/certs
      - ./traefik_conf:/conf
    restart: always
#       --docker.swarmmode
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/conf/"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.mongo.address=:27017"
      - "--entrypoints.postgres.address=:5432"
      - "--log.level=DEBUG"
      - "--accessLog"
      - "--api"
      - "--metrics"
      - "--metrics.prometheus"
      - "--providers.docker.network=traefik-public"
    networks:
      - default
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.lvh.fiks.im`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls=true"
#      - "traefik.http.routers.traefik.tls.certresolver=letsencryptresolver"
#      - "traefik.http.routers.traefik.middlewares=traefik-auth"
#      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$8EVjn/nj$$GiLUZqcbueT
#      - "traefik.http.middlewares.traefik-auth.basicauth.users=USER:PASSWORD"
# monitoring
      - "--ping=true"
      - "--ping.entrypoint=web"
  whoami:
    image: "containous/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.fiks.im`)"
      - "traefik.http.routers.whoami.entrypoints=web"

#      - "traefik.http.middlewares.traefik-auth.basicauth.users=USER:PASSWORD"
#      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
#      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"

      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`whoami.fiks.im`)"
#      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
  portainer:
    image: portainer/portainer-ce:2.0.0
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
#    ports:
#      - 8000:8000
#      - 9000:9000
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.portainer-secure.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.rule=Host(`docker.fiks.im`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.portainer-secure.rule=Host(`docker.fiks.im`)"
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.tls=true"
      # Uncomment this label if your Traefik instance is using a specific Docker network and replace the network name
      # This is not necessary if you set your default network in Traefik config/parameters
      # - "traefik.docker.network=your-traefik-network-name"
volumes:
  portainer_data:
networks:
  traefik-public:
    external: true
